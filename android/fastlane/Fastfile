# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Upload metadata to Google Play"
  lane :upload_metadata do
    supply(
      skip_upload_apk: true,         # Skip APK upload
      skip_upload_aab: true,         # Skip AAB upload
      skip_upload_images: true,       # Skip images
      skip_upload_screenshots: true,  # Skip screenshots
      skip_upload_changelogs: true,   # Skip changelog upload
      skip_upload_metadata: false,     # Ensure metadata is uploaded
      json_key: "fastlane/jsonFile.json",  # Path to your JSON key file
      package_name: "com.easypatientdynamic"  # Your app's package name
    )
  end

desc "Publish a new version to the Google Play (PRODUCTION)"
lane :production do
  # Step 1: Manually update the version code in build.gradle
  gradle_file = "/home/runner/work/Easy-Patient/Easy-Patient/android/app/build.gradle"

  # Read the build.gradle file and extract the current versionCode
  current_version_code = nil
  new_version_code = nil
  gradle_content = File.read(gradle_file)
  
  # Use a regular expression to find the versionCode and increment it
  gradle_content.gsub!(/versionCode (\d+)/) do |match|
    current_version_code = $1.to_i
    new_version_code = current_version_code + 1
    "versionCode #{new_version_code}"
  end

  # Write the updated versionCode back to the build.gradle file
  File.write(gradle_file, gradle_content)

  UI.message("Updated versionCode from #{current_version_code} to #{new_version_code}")

# Step 2: Build the AAB file using Gradle
  gradle(
    task: "bundle",
    build_type: "Release"
  )  

  # Step 3: Upload the AAB to Google Play using Supply
  supply(
    aab: "/home/runner/work/Easy-Patient/Easy-Patient/android/app/build/outputs/bundle/release/app-release.aab",  # Path to the AAB file
    track: "production",   # Use 'production' for releasing to production track
    skip_upload_metadata: true,  # Skip metadata upload if not updating
    skip_upload_images: true,     # Skip image upload if not updating
    skip_upload_screenshots: true, # Skip screenshots upload if not updating
    json_key: "fastlane/jsonFile.json", # Path to your JSON key file for authentication
    package_name: "com.easypatientdynamic"  # Your app's package name (ensure this is correct)
  )
end



  desc "Upload only screenshots to Google Play"
  lane :upload_screenshots do
    supply(
      skip_upload_apk: true,           # Skip APK upload
      skip_upload_aab: true,            # Skip AAB upload
      skip_upload_metadata: true,       # Skip metadata upload
      skip_upload_images: false,        # Ensure images are uploaded
      skip_upload_screenshots: false,   # Ensure screenshots are uploaded
      skip_upload_changelogs: true,     # Skip changelog upload
      json_key: "fastlane/jsonFile.json", # Path to your JSON key file
      package_name: "com.easypatientdynamic"  # Your app's package name
    )
  end
end
