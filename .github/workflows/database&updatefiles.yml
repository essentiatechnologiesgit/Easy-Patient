name: Database Connect and update config
on:
  repository_dispatch:
    types: [iOS]

jobs:
  upload_screenshots:
    runs-on: ubuntu-latest
    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Access the client payload (extract the bundle ID)
      - name: Access client payload
        run: |
          echo "The bundle ID is: ${{ github.event.client_payload.bundleID }}"


      
      # Fetch API data and log the response
      - name: Fetch API data
        id: fetch_api_data
        run: |
          echo "Fetching data for bundle ID: ${{ github.event.client_payload.bundleID }}"
          RESPONSE=$(curl --location 'https://5713-2400-adc1-1aa-d500-c822-86fc-8187-644d.ngrok-free.app/getData/${{ github.event.client_payload.bundleID }}')
          echo "API Response: $RESPONSE"
          echo "response=$RESPONSE" >> $GITHUB_ENV  # Use environment file for output

      # Update config.js file with the API response
      - name: Update config.js
        run: |

      
          # Parse values from the JSON response using jq, and handle spaces in URLs
          SPLASH_SCREEN=$(echo "$API_RESPONSE" | jq -r '.[0].splashscreen // ""')
          PRIMARY_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].primarycolor // "#000000"')
          SECONDARY_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].secondarycolor // "#000000"')
          TERTIARY_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].tertiarycolor // "#000000"')
          LOGO=$(echo "$API_RESPONSE" | jq -r '.[0].logo // ""' | sed 's/ /%20/g')
          BACKGROUND_IMAGE=$(echo "$API_RESPONSE" | jq -r '.[0].backgroundimage // ""' | sed 's/ /%20/g')
          BACKGROUND_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].backgroundcolor // "#FFFFFF"')
          MODAL_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].modalcolor // "#FFFFFF"')
          BUTTON_TEXT_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].buttontext // "#FFFFFF"')
          HEADER_COLOR=$(echo "$API_RESPONSE" | jq -r '.[0].headercolor // "#FFFFFF"')
          BUNDLE_ID=$(echo "$API_RESPONSE" | jq -r '.[0].bundle_id // ""')
          KEYWORDS=$(echo "$API_RESPONSE" | jq -r '.[0].keywords // ""')
          PROMOTIONAL_TEXT=$(echo "$API_RESPONSE" | jq -r '.[0].promotionaltext // ""')
          SUPPORT_URL=$(echo "$API_RESPONSE" | jq -r '.[0].supporturl // ""')
          MARKETING_URL=$(echo "$API_RESPONSE" | jq -r '.[0].marketingurl // ""')
          IOS_APP_NAME=$(echo "$API_RESPONSE" | jq -r '.[0].iosappname // ""')
          DESCRIPTION=$(echo "$API_RESPONSE" | jq -r '.[0].description // ""')
          ANDROID_APP_NAME=$(echo "$API_RESPONSE" | jq -r '.[0].androidappname // ""')
          SHORT_DESCRIPTION=$(echo "$API_RESPONSE" | jq -r '.[0].short_description // ""')
          LONG_DESCRIPTION=$(echo "$API_RESPONSE" | jq -r '.[0].long_description // ""')
      
          # Safely write the config.js file
          printf "const config = {
            splashScreen: \"%s\",
            primaryColor: \"%s\",
            textColorHeadings: '#2A2A31',
            secondaryColor: \"%s\",
            tertiaryColor: \"%s\",
            logo: \"%s\",
            backgroundImage: \"%s\",
            backgroundColorImage: '',
            backgroundImageType: 'png',
            subLogo: \"%s\",
            backgroundColor: \"%s\",
            modalColor: \"%s\",
            buttonText: \"%s\",
            headerColor: \"%s\",
            BUNDLE_ID: \"%s\",
            keywords: \"%s\",
            promotionalText: \"%s\",
            supportUrl: \"%s\",
            marketingUrl: \"%s\",
            Name: \"%s\",
            description: \"%s\",
            ANDROID_APP_NAME: \"%s\",
            shortDescription: \"%s\",
            longDescription: \"%s\"
          };\n\nconsole.log('Config data:', config);\n\nmodule.exports = config;" \
          "$SPLASH_SCREEN" "$PRIMARY_COLOR" "$SECONDARY_COLOR" "$TERTIARY_COLOR" "$LOGO" "$BACKGROUND_IMAGE" "$LOGO" \
          "$BACKGROUND_COLOR" "$MODAL_COLOR" "$BUTTON_TEXT_COLOR" "$HEADER_COLOR" "$BUNDLE_ID" "$KEYWORDS" "$PROMOTIONAL_TEXT" \
          "$SUPPORT_URL" "$MARKETING_URL" "$IOS_APP_NAME" "$DESCRIPTION" "$ANDROID_APP_NAME" "$SHORT_DESCRIPTION" "$LONG_DESCRIPTION" > "${{ github.workspace }}/config.js"


      # Print the updated config.js file to the console
      - name: Print updated config.js
        run: |
          echo "Contents of the updated config.js:"
          cat ${{ github.workspace }}/config.js

