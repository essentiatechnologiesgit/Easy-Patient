name: Database Connect and update config
on:
  repository_dispatch:
    types: [iOS]

jobs:
  upload_screenshots:
    runs-on: ubuntu-latest
    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Access the client payload (extract the bundle ID)
      - name: Access client payload
        run: |
          echo "The bundle ID is: ${{ github.event.client_payload.bundleID }}"

      # Fetch API data and save relevant parts to environment variables
      - name: Fetch API data
        id: fetch_api_data
        run: |
          echo "Fetching data for bundle ID: ${{ github.event.client_payload.bundleID }}"
          RESPONSE=$(curl --location 'https://5713-2400-adc1-1aa-d500-c822-86fc-8187-644d.ngrok-free.app/getData/${{ github.event.client_payload.bundleID }}')
          echo "API Response: $RESPONSE"

          # Parse and export relevant fields from the JSON response using jq
          echo "SPLASH_SCREEN=$(echo "$RESPONSE" | jq -r '.[0].splashscreen')" >> $GITHUB_ENV
          echo "LOGO=$(echo "$RESPONSE" | jq -r '.[0].logo')" >> $GITHUB_ENV
          echo "BACKGROUND_IMAGE=$(echo "$RESPONSE" | jq -r '.[0].backgroundimage')" >> $GITHUB_ENV
          echo "SUB_LOGO=$(echo "$RESPONSE" | jq -r '.[0].sublogo')" >> $GITHUB_ENV
          echo "JSON_FILE=$(echo "$RESPONSE" | jq -r '.[0].jsonFile')" >> $GITHUB_ENV

      # Create assets directory
      # Download images to the assets folder if they don't already exist
      - name: Download splash screen
        run: |
          if [ ! -f ${{ github.workspace }}/src/assets/splashScreen.png ]; then
            curl -o ${{ github.workspace }}/src/assets/splashScreen.png $SPLASH_SCREEN
            echo "Downloaded splash screen."
          else
            echo "Splash screen already exists."
          fi

      - name: Download logo
        run: |
          if [ ! -f ${{ github.workspace }}/src/assets/logo.png ]; then
            curl -o ${{ github.workspace }}/src/assets/logo.png $LOGO
            echo "Downloaded logo."
          else
            echo "Logo already exists."
          fi

      - name: Download background image
        run: |
          if [ ! -f ${{ github.workspace }}/src/assets/backgroundImage.png ]; then
            curl -o ${{ github.workspace }}/src/assets/backgroundImage.png $BACKGROUND_IMAGE
            echo "Downloaded background image."
          else
            echo "Background image already exists."
          fi

      - name: Download sub logo
        run: |
          if [ ! -f ${{ github.workspace }}/src/assets/subLogo.png ]; then
            curl -o ${{ github.workspace }}/src/assets/subLogo.png $SUB_LOGO
            echo "Downloaded sub logo."
          else
            echo "Sub logo already exists."
          fi

      - name: Download json file
        run: |
          if [ ! -f ${{ github.workspace }}/android/fastlane/jsonFile.json ]; then
            curl -o ${{ github.workspace }}/android/fastlane/jsonFile.json $SUB_LOGO
            echo "Downloaded sub logo."
          else
            echo "Sub logo already exists."
          fi



      # Update config.js file with the new image paths (using require)
      - name: Update config.js
        run: |
          printf "const config = {
            splashScreen: require('./src/assets/splashScreen.png'),
            logo: require('./src/assets/logo.png'),
            backgroundImage: require('./src/assets/backgroundImage.png'),
            subLogo: require('./src/assets/subLogo.png'),
            primaryColor: \"%s\",
            textColorHeadings: '#2A2A31',
            secondaryColor: \"%s\",
            tertiaryColor: \"%s\",
            backgroundColorImage: '',
            backgroundImageType: 'png',
            backgroundColor: \"%s\",
            modalColor: \"%s\",
            buttonText: \"%s\",
            headerColor: \"%s\",
            BUNDLE_ID: \"%s\",
            keywords: \"%s\",
            promotionalText: \"%s\",
            supportUrl: \"%s\",
            marketingUrl: \"%s\",
            Name: \"%s\",
            description: \"%s\",
            ANDROID_APP_NAME: \"%s\",
            shortDescription: \"%s\",
            longDescription: \"%s\",
            jsonfile: \"%s\"
          };\n\n\nmodule.exports = config;" \
          "$PRIMARY_COLOR" "$SECONDARY_COLOR" "$TERTIARY_COLOR" \
          "$BACKGROUND_COLOR" "$MODAL_COLOR" "$BUTTON_TEXT_COLOR" \
          "$HEADER_COLOR" "$BUNDLE_ID" "$KEYWORDS" "$PROMOTIONAL_TEXT" \
          "$SUPPORT_URL" "$MARKETING_URL" "$IOS_APP_NAME" "$DESCRIPTION" \
          "$ANDROID_APP_NAME" "$SHORT_DESCRIPTION" "$LONG_DESCRIPTION" "$JSON_FILE" > "${{ github.workspace }}/config.js"

      # Print the updated config.js file to the console
      - name: Print updated config.js
        run: |
          echo "Contents of the updated config.js:"
          cat ${{ github.workspace }}/config.js
